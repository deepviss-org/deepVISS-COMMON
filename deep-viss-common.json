{
  "openapi":"3.0.0",

  "info":{
    "description":"DeepVISS (Deep Vision Interoperability Specification Standard) allows several computer vision solutions to produce, consume and exchange events in the same format.",
    "version":"1.2.0",
    "title":"DeepVISS Common",
    "termsOfService":"https://deepviss.org",
    "contact":{
      "email":"office@deepviss.org"
    },
    "license":{
      "name":"Apache 2.0",
      "url":"https://www.apache.org/licenses/LICENSE-2.0.html"
    }
  },
  "tags":[
    {
      "name":"frame",
      "description":"Information about post-processed frames",
      "externalDocs":{
        "description":"Streaming API",
        "url":"https://deepviss.org"
      }
    },
    {
      "name":"analysis",
      "description":"End-points for image or image array analysis",
      "externalDocs":{
        "description":"Find out more",
        "url":"https://deepviss.org"
      }
    }
  ],
  "components": {
    "schemas": {
      "Image": {
        "type": "object",
        "properties": {
          "imageURL": {
            "description": "The URL where the image is stored.",
            "type": "string"
          },
          "imageBase64": {
            "type": "string",
            "description": "Base64 encoded string of the image."
          },
          "imageContentType": {
            "type": "string",
            "description": "Image MIME-type, such as image/png or image/jpeg"
          }
        }
      },
      "BoundingRectangle": {
        "type": "object",
        "required": [
          "top",
          "left",
          "width",
          "height"
        ],
        "properties": {
          "top": {
            "description": "Top-most position, in pixels, of of the bounding rectangle",
            "type": "integer",
            "format": "int32",
            "example": 32
          },
          "left": {
            "description": "Left-most position, in pixels, of of the bounding rectangle",
            "type": "integer",
            "format": "int32",
            "example": 57
          },
          "width": {
            "description": "Width, in pixels, of the bounding rectangle",
            "type": "integer",
            "format": "int32",
            "example": 237
          },
          "height": {
            "description": "Height, in pixels, of the bounding rectangle",
            "type": "integer",
            "format": "int32",
            "example": 352
          }
        }
      },
      "GeoPosition": {
        "type": "object",
        "required": [
          "latitude",
          "longitude"
        ],
        "properties": {
          "latitude": {
            "description": "The latitude at which the video source is installed.",
            "type": "number",
            "format": "double"
          },
          "longitude": {
            "description": "The longitude at which the video source is installed.",
            "type": "number",
            "format": "double"
          },
          "altitude": {
            "description": "The altitude at which the video source is installed.",
            "type": "number",
            "format": "double"
          },
          "elevation": {
            "description": "The elevation from the ground at which the video source is installed, measured in meters.",
            "type": "number",
            "format": "double"
          }
        }
      },
      "KeypointsSegment": {
        "type": "object",
        "additionalProperties": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Point2D",
            "type": "Point2D"
          }
        }
      },
      "Point2D": {
        "type": "object",
        "required": [
          "x",
          "y"
        ],
        "properties": {
          "x": {
            "description": "X-coordinate as integer number of pixels measured from the left to the right.",
            "type": "integer",
            "format": "int32"
          },
          "y": {
            "description": "Y-coordinate as integer number of pixels measured from the top to the bottom.",
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "Point3D": {
        "type": "object",
        "required": [
          "x",
          "y",
          "z"
        ],
        "properties": {
          "x": {
            "description": "X-coordinate as integer number of pixels measured from the left to the right.",
            "type": "integer",
            "format": "int32"
          },
          "y": {
            "description": "Y-coordinate as integer number of pixels measured from the top to the bottom.",
            "type": "integer",
            "format": "int32"
          },
          "z": {
            "description": "Z-coordinate as integer number of pixels measured from the top to the bottom.",
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "Shape": {
        "type": "object",
        "discriminator": {
          "propertyName": "shapeType"
        },
        "required": [
          "shapeId",
          "shapeType"
        ],
        "properties": {
          "shapeId": {
            "type": "string",
            "description": "[TBD] Alpha-numeric, unique id of dataset",
            "example": "EWFUWEGBUWRG342497EDFDDFBC81751818B7FD1300124455B07E91CB289F87791D78064ECC93754F19B13D419489F162A150A22DD814CKAF0E"
          },
          "shapeType": {
            "type": "string",
            "description": "descriminator",
            "example": "Shape2DReactangle"
          }
        }
      },
      "Shape2DRectangle": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Shape"
          },
          {
            "type": "object",
            "properties": {
              "top": {
                "type": "integer",
                "format": "int32",
                "description": "Top coordinate of the tag, relative to media raster",
                "example": 145
              },
              "left": {
                "type": "integer",
                "format": "int32",
                "description": "Left coordinate of the tag, relative to media raster",
                "example": 182
              },
              "right": {
                "type": "integer",
                "format": "int32",
                "description": "Right coordinate of the tag, relative to media raster",
                "example": 295
              },
              "bottom": {
                "type": "integer",
                "format": "int32",
                "description": "Bottom coordinate of the tag, relative to media raster",
                "example": 244
              }
            }
          }
        ]
      },
      "Shape2DPolygon": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Shape"
          },
          {
            "type": "object",
            "properties": {
              "points": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Point2D",
                  "type": "Point2D"
                }
              }
            }
          }
        ]
      },
      "Shape2DTimeboundPolygon": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Shape"
          },
          {
            "type": "object",
            "properties": {
              "startFrameCounter": {
                "type": "integer",
                "format": "int32",
                "description": "Frame where the described tag begins"
              },
              "endFrameCounter": {
                "type": "integer",
                "format": "int32",
                "description": "Frame where the described tag begins"
              },
              "points": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Point2D",
                  "type": "Point2D"
                }
              }
            }
          }
        ]
      },
      "TextBlock": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Shape"
          },
          {
            "type": "object",
            "properties": {
              "boundingBox": {
                "type": "Shape2DRectangle",
                "$ref": "#/components/schemas/Shape2DRectangle"
              },
              "encoding": {
                "type": "string",
                "description": "Character encoding",
                "example": "UTF-8"
              },
              "alphabet": {
                "type": "string",
                "description": "text alphabet",
                "example": "english"
              },
              "endianness": {
                "type": "string",
                "description": "endianness",
                "example": "Little-endian ??"
              },
              "direction": {
                "type": "string",
                "description": "reading direction",
                "example": "left-to-right",
                "enum": [
                  "left-to-right",
                  "right-to-left",
                  "top-to-bottom",
                  "bottom-to-top"
                ]

              },
              "collation": {
                "type": "string",
                "description": "collation",
                "example": "utf8_romanian_ci "
              }
            }
          }
        ]
      }
    }
  },
  "externalDocs":{
    "description":"Find out more about DeepVISS",
    "url":"https://deepviss.org"
  }
}